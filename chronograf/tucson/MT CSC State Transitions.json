{
	"meta": {
		"chronografVersion": "1.9.4",
		"sources": {
			"1": {
				"name": "Influx 1",
				"link": "/chronograf/v1/sources/1"
			}
		}
	},
	"dashboard": {
		"id": "38",
		"cells": [
			{
				"i": "d8572d62-5427-499c-a147-3cac12baa158",
				"x": 7,
				"y": 2,
				"w": 2,
				"h": 2,
				"name": "STANDBY",
				"queries": [
					{
						"query": "// STANDBY = 5\n\nimport \"strings\" \n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    state_count:\n      if r._value == 5 then 1 else 0\n    })\n  )\n  |> group()\n  |> sum(column: \"state_count\")\n \n\n  \n ",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "// STANDBY = 5\n\nimport \"strings\" \n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    state_count:\n      if r._value == 5 then 1 else 0\n    })\n  )\n  |> group()\n  |> sum(column: \"state_count\")\n \n\n  \n ",
							"range": null,
							"shifts": null
						},
						"source": "",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "single-stat",
				"colors": [
					{
						"id": "base",
						"type": "text",
						"hex": "#00C9FF",
						"name": "laser",
						"value": "-1000000000000000000"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "subsystem",
						"displayName": "Subsystem",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 0
				},
				"note": "",
				"noteVisibility": "showWhenNoData",
				"links": {
					"self": "/chronograf/v1/dashboards/38/cells/d8572d62-5427-499c-a147-3cac12baa158"
				}
			},
			{
				"i": "8a5e302e-d54a-4ef6-b864-599fcb92c62c",
				"x": 0,
				"y": 8,
				"w": 9,
				"h": 4,
				"name": "MT CSC State transitions",
				"queries": [
					{
						"query": "// CSC state\n// STANDBY = 5\n// OFFLINE = 4\n// FAULT = 3\n// ENABLED = 2\n// DISABLED = 1\n\nimport \"strings\"\n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> map(fn: (r) => ({\n    r with\n    csc: strings.split(v: r._measurement, t: \".\")[2],\n    state: r._value\n  }))\n  |> group(columns: [\"csc\"])\n  |> keep(columns: [\"_time\", \"csc\", \"state\"])\n \n",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "// CSC state\n// STANDBY = 5\n// OFFLINE = 4\n// FAULT = 3\n// ENABLED = 2\n// DISABLED = 1\n\nimport \"strings\"\n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> map(fn: (r) => ({\n    r with\n    csc: strings.split(v: r._measurement, t: \".\")[2],\n    state: r._value\n  }))\n  |> group(columns: [\"csc\"])\n  |> keep(columns: [\"_time\", \"csc\", \"state\"])\n \n",
							"range": null,
							"shifts": null
						},
						"source": "",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "AT heartbeat counts",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "line-stepplot",
				"colors": [
					{
						"id": "34258b20-ce60-4728-b43e-9c5e4cfb753a",
						"type": "scale",
						"hex": "#31C0F6",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "e6f5fb76-23ec-4abc-8a50-3f83776e9adb",
						"type": "scale",
						"hex": "#A500A5",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "c2df3f7a-94fd-4e23-a585-8f3937d67b8f",
						"type": "scale",
						"hex": "#FF7E27",
						"name": "Nineteen Eighty Four",
						"value": "0"
					}
				],
				"legend": {
					"type": "static",
					"orientation": "bottom"
				},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "_time",
						"displayName": "Last changed",
						"visible": true
					},
					{
						"internalName": "_value",
						"displayName": "",
						"visible": true
					},
					{
						"internalName": "_measurement",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 0
				},
				"note": "No state transitions for the selected time period.\n----",
				"noteVisibility": "showWhenNoData",
				"links": {
					"self": "/chronograf/v1/dashboards/38/cells/8a5e302e-d54a-4ef6-b864-599fcb92c62c"
				}
			},
			{
				"i": "9b966da7-720a-46a5-a699-eef8772e4b47",
				"x": 5,
				"y": 2,
				"w": 2,
				"h": 2,
				"name": "ENABLED",
				"queries": [
					{
						"query": "// ENABLED = 2 \n\nimport \"strings\" \n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    state_count:\n      if r._value == 2 then 1 else 0\n    })\n  )\n  |> group()\n  |> sum(column: \"state_count\")\n \n\n  \n ",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "// ENABLED = 2 \n\nimport \"strings\" \n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    state_count:\n      if r._value == 2 then 1 else 0\n    })\n  )\n  |> group()\n  |> sum(column: \"state_count\")\n \n\n  \n ",
							"range": null,
							"shifts": null
						},
						"source": "",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "single-stat",
				"colors": [
					{
						"id": "base",
						"type": "text",
						"hex": "#7CE490",
						"name": "honeydew",
						"value": "-1000000000000000000"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "subsystem",
						"displayName": "Subsystem",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 0
				},
				"note": "",
				"noteVisibility": "showWhenNoData",
				"links": {
					"self": "/chronograf/v1/dashboards/38/cells/9b966da7-720a-46a5-a699-eef8772e4b47"
				}
			},
			{
				"i": "211bba74-08da-4260-bfac-ca74490a8c38",
				"x": 3,
				"y": 2,
				"w": 2,
				"h": 2,
				"name": "FAULT",
				"queries": [
					{
						"query": "// FAULT = 3 \n\nimport \"strings\" \n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    state_count:\n      if r._value == 3 then 1 else 0\n    })\n  )\n  |> group()\n  |> sum(column: \"state_count\")\n \n\n  \n ",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "// FAULT = 3 \n\nimport \"strings\" \n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    state_count:\n      if r._value == 3 then 1 else 0\n    })\n  )\n  |> group()\n  |> sum(column: \"state_count\")\n \n\n  \n ",
							"range": null,
							"shifts": null
						},
						"source": "",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "single-stat",
				"colors": [
					{
						"id": "base",
						"type": "text",
						"hex": "#BF3D5E",
						"name": "ruby",
						"value": "-1000000000000000000"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "subsystem",
						"displayName": "Subsystem",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 0
				},
				"note": "",
				"noteVisibility": "showWhenNoData",
				"links": {
					"self": "/chronograf/v1/dashboards/38/cells/211bba74-08da-4260-bfac-ca74490a8c38"
				}
			},
			{
				"i": "ae86b1f0-99dc-4110-846f-d1b5f5ae460a",
				"x": 0,
				"y": 2,
				"w": 3,
				"h": 2,
				"name": "MT CSCs",
				"queries": [
					{
						"query": "import \"strings\" \n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> last()\n  |> group()\n  |> count()\n  \n ",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "import \"strings\" \n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> last()\n  |> group()\n  |> count()\n  \n ",
							"range": null,
							"shifts": null
						},
						"source": "",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "single-stat",
				"colors": [
					{
						"id": "base",
						"type": "text",
						"hex": "#00C9FF",
						"name": "laser",
						"value": "-1000000000000000000"
					},
					{
						"id": "e8c94595-c7ab-4923-aae8-806ef3565739",
						"type": "text",
						"hex": "#00C9FF",
						"name": "laser",
						"value": "1"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "subsystem",
						"displayName": "Subsystem",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 0
				},
				"note": "",
				"noteVisibility": "default",
				"links": {
					"self": "/chronograf/v1/dashboards/38/cells/ae86b1f0-99dc-4110-846f-d1b5f5ae460a"
				}
			},
			{
				"i": "db09267b-5e47-4412-94ed-d66f069ad5ce",
				"x": 0,
				"y": 4,
				"w": 9,
				"h": 4,
				"name": "MT CSCs Current State",
				"queries": [
					{
						"query": "// CSC states\n// STANDBY = 5\n// OFFLINE = 4\n// FAULT = 3\n// ENABLED = 2\n// DISABLED = 1\n\nimport \"strings\"\n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    csc: strings.split(v: r._measurement, t: \".\")[2],\n    state:\n      if r._value == 5 then \"5 (STANDBY)\"\n      else if r._value == 4 then \"4 (OFFLINE)\"\n      else if r._value == 3 then \"3 (FAULT)\"\n      else if r._value == 2 then \"2 (ENABLED)\"\n      else if r._value == 1 then \"1 (DISABLED)\"\n      else \"UNKNOWN\",\n    duration: strings.splitAfter(v: string(v: duration(v: uint(v: r._stop) - uint(v: r._time))), t: \"m\")[0]\n\n    })\n  )\n  |> keep(columns: [\"csc\", \"state\", \"_time\", \"duration\"])\n \n",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "// CSC states\n// STANDBY = 5\n// OFFLINE = 4\n// FAULT = 3\n// ENABLED = 2\n// DISABLED = 1\n\nimport \"strings\"\n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /lsst.sal.MT.*.logevent_summaryState/ and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    csc: strings.split(v: r._measurement, t: \".\")[2],\n    state:\n      if r._value == 5 then \"5 (STANDBY)\"\n      else if r._value == 4 then \"4 (OFFLINE)\"\n      else if r._value == 3 then \"3 (FAULT)\"\n      else if r._value == 2 then \"2 (ENABLED)\"\n      else if r._value == 1 then \"1 (DISABLED)\"\n      else \"UNKNOWN\",\n    duration: strings.splitAfter(v: string(v: duration(v: uint(v: r._stop) - uint(v: r._time))), t: \"m\")[0]\n\n    })\n  )\n  |> keep(columns: [\"csc\", \"state\", \"_time\", \"duration\"])\n \n",
							"range": null,
							"shifts": null
						},
						"source": "",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "AT heartbeat counts",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "table",
				"colors": [
					{
						"id": "base",
						"type": "text",
						"hex": "#00C9FF",
						"name": "laser",
						"value": "-1000000000000000000"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "csc",
						"displayName": "CSC",
						"visible": true
					},
					{
						"internalName": "state",
						"displayName": "Summary State",
						"visible": true
					},
					{
						"internalName": "_time",
						"displayName": "Last changed",
						"visible": true
					},
					{
						"internalName": "duration",
						"displayName": "Duration",
						"visible": true
					}
				],
				"timeFormat": "YYYY/MM/DD HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 0
				},
				"note": "",
				"noteVisibility": "default",
				"links": {
					"self": "/chronograf/v1/dashboards/38/cells/db09267b-5e47-4412-94ed-d66f069ad5ce"
				}
			},
			{
				"i": "97a0dd0d-344a-475c-a425-899e0a2a5331",
				"x": 0,
				"y": 0,
				"w": 9,
				"h": 2,
				"name": "Usage",
				"queries": [
					{
						"query": "",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "",
							"range": null,
							"shifts": null
						},
						"source": "",
						"type": "influxql"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "note",
				"colors": [],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 2
				},
				"note": "MT CSC State Transitions\n========================\n\nUse summary state information to monitor CSC state transitions.\n\n1 (DISABLED), 2 (ENABLED), 3 (FAULT), 4 (OFFLINE), 5 (STANDBY)",
				"noteVisibility": "default",
				"links": {
					"self": "/chronograf/v1/dashboards/38/cells/97a0dd0d-344a-475c-a425-899e0a2a5331"
				}
			}
		],
		"templates": [],
		"name": "MT CSC State Transitions",
		"organization": "default",
		"links": {
			"self": "/chronograf/v1/dashboards/38",
			"cells": "/chronograf/v1/dashboards/38/cells",
			"templates": "/chronograf/v1/dashboards/38/templates"
		}
	}
}