{
	"meta": {
		"chronografVersion": "1.9.4",
		"sources": {
			"1": {
				"name": "Sasquatch InfluxDB",
				"link": "/chronograf/v1/sources/1"
			},
			"2": {
				"name": "InfluxDB2",
				"link": "/chronograf/v1/sources/2"
			}
		}
	},
	"dashboard": {
		"id": "57",
		"cells": [
			{
				"i": "9c41410d-3e46-4025-8e77-554bdbbd75ae",
				"x": 0,
				"y": 7,
				"w": 12,
				"h": 2,
				"name": "AuxTel Telemetry (messages/sec)",
				"queries": [
					{
						"query": "from(bucket: \"efd/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement =~ /.*ATAOS|.*ATDome|.*ATDomeTrajectory|.*ATHexapod|.*ATPneumatics|.*ATPtg|.*ATMCS/ \n  and  r._measurement !~ /.*logevent.*/ \n  and  r._measurement !~ /.*command.*/\n  and  r._measurement !~ /.*ackcmd.*/ \n  and (r._field == \"private_efdStamp\"))\n  |> aggregateWindow(every: 1s, fn: count)\n  |> keep(columns: [\"_time\", \"_measurement\", \"_value\"])\n ",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "from(bucket: \"efd/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement =~ /.*ATAOS|.*ATDome|.*ATDomeTrajectory|.*ATHexapod|.*ATPneumatics|.*ATPtg|.*ATMCS/ \n  and  r._measurement !~ /.*logevent.*/ \n  and  r._measurement !~ /.*command.*/\n  and  r._measurement !~ /.*ackcmd.*/ \n  and (r._field == \"private_efdStamp\"))\n  |> aggregateWindow(every: 1s, fn: count)\n  |> keep(columns: [\"_time\", \"_measurement\", \"_value\"])\n ",
							"range": null,
							"shifts": null
						},
						"source": "/chronograf/v1/sources/1",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "line-stepplot",
				"colors": [
					{
						"id": "e5a83a74-0836-4731-aec7-6665f11b3cf3",
						"type": "scale",
						"hex": "#31C0F6",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "0ba45a1b-810b-4c58-915e-043a5d965224",
						"type": "scale",
						"hex": "#A500A5",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "9665241b-31e3-48c9-a314-257ef9cfde03",
						"type": "scale",
						"hex": "#FF7E27",
						"name": "Nineteen Eighty Four",
						"value": "0"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 2
				},
				"note": "",
				"noteVisibility": "default",
				"links": {
					"self": "/chronograf/v1/dashboards/57/cells/9c41410d-3e46-4025-8e77-554bdbbd75ae"
				}
			},
			{
				"i": "50a82aa9-7ebd-40b1-b6c4-5b0a5476e0a4",
				"x": 0,
				"y": 9,
				"w": 12,
				"h": 2,
				"name": "MainTel CSC state",
				"queries": [
					{
						"query": "// CSC states\n// STANDBY = 5\n// OFFLINE = 4\n// FAULT = 3\n// ENABLED = 2\n// DISABLED = 1\n\nimport \"strings\"\n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /.*MTAOS|.*MTDome|.*MTDomeTrajectory|.*MTPtg/ and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    csc: strings.split(v: r._measurement, t: \".\")[2],\n    state:\n      if r._value == 5 then \"5 (STANDBY)\"\n      else if r._value == 4 then \"OFFLINE\"\n      else if r._value == 3 then \"FAULT\"\n      else if r._value == 2 then \"ENABLED\"\n      else if r._value == 1 then \"DISABLED\"\n      else \"UNKNOWN\"\n      })\n  )\n\n  |> keep(columns: [\"csc\", \"state\", \"_time\"])\n\n\n ",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "// CSC states\n// STANDBY = 5\n// OFFLINE = 4\n// FAULT = 3\n// ENABLED = 2\n// DISABLED = 1\n\nimport \"strings\"\n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /.*MTAOS|.*MTDome|.*MTDomeTrajectory|.*MTPtg/ and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    csc: strings.split(v: r._measurement, t: \".\")[2],\n    state:\n      if r._value == 5 then \"5 (STANDBY)\"\n      else if r._value == 4 then \"OFFLINE\"\n      else if r._value == 3 then \"FAULT\"\n      else if r._value == 2 then \"ENABLED\"\n      else if r._value == 1 then \"DISABLED\"\n      else \"UNKNOWN\"\n      })\n  )\n\n  |> keep(columns: [\"csc\", \"state\", \"_time\"])\n\n\n ",
							"range": null,
							"shifts": null
						},
						"source": "/chronograf/v1/sources/1",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "table",
				"colors": [
					{
						"id": "base",
						"type": "text",
						"hex": "#00C9FF",
						"name": "laser",
						"value": "-1000000000000000000"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": false,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "_time",
						"displayName": "",
						"visible": false
					},
					{
						"internalName": "csc",
						"displayName": "CSC",
						"visible": true
					},
					{
						"internalName": "state",
						"displayName": "State",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": false,
					"digits": 2
				},
				"note": "",
				"noteVisibility": "default",
				"links": {
					"self": "/chronograf/v1/dashboards/57/cells/50a82aa9-7ebd-40b1-b6c4-5b0a5476e0a4"
				}
			},
			{
				"i": "c4e5c719-65c4-4555-9017-81969641828f",
				"x": 0,
				"y": 11,
				"w": 12,
				"h": 2,
				"name": "MainTel heartbeats",
				"queries": [
					{
						"query": "from(bucket: \"efd/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement =~ /.*MTAOS|.*MTDome|.*MTDomeTrajectory|.*MTPtg\"/ and (r._field == \"heartbeat\"))\n  |> aggregateWindow(every:  autoInterval, fn: count)\n  |> keep(columns: [\"_time\", \"_measurement\", \"_value\"])\n ",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "from(bucket: \"efd/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement =~ /.*MTAOS|.*MTDome|.*MTDomeTrajectory|.*MTPtg\"/ and (r._field == \"heartbeat\"))\n  |> aggregateWindow(every:  autoInterval, fn: count)\n  |> keep(columns: [\"_time\", \"_measurement\", \"_value\"])\n ",
							"range": null,
							"shifts": null
						},
						"source": "/chronograf/v1/sources/1",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "line-stepplot",
				"colors": [
					{
						"id": "e5a83a74-0836-4731-aec7-6665f11b3cf3",
						"type": "scale",
						"hex": "#31C0F6",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "0ba45a1b-810b-4c58-915e-043a5d965224",
						"type": "scale",
						"hex": "#A500A5",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "9665241b-31e3-48c9-a314-257ef9cfde03",
						"type": "scale",
						"hex": "#FF7E27",
						"name": "Nineteen Eighty Four",
						"value": "0"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 2
				},
				"note": "",
				"noteVisibility": "default",
				"links": {
					"self": "/chronograf/v1/dashboards/57/cells/c4e5c719-65c4-4555-9017-81969641828f"
				}
			},
			{
				"i": "658e0f86-488e-4f2c-9b95-839bcfee57ba",
				"x": 0,
				"y": 3,
				"w": 12,
				"h": 2,
				"name": "AuxTel CSC state",
				"queries": [
					{
						"query": "// CSC states\n// STANDBY = 5\n// OFFLINE = 4\n// FAULT = 3\n// ENABLED = 2\n// DISABLED = 1\n\nimport \"strings\"\n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /.*ATAOS|.*ATDome|.*ATDomeTrajectory|.*ATHexapod|.*ATPneumatics|.*ATPtg|.*ATMCS/  and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    csc: strings.split(v: r._measurement, t: \".\")[2],\n    state:\n      if r._value == 5 then \"5 (STANDBY)\"\n      else if r._value == 4 then \"OFFLINE\"\n      else if r._value == 3 then \"FAULT\"\n      else if r._value == 2 then \"ENABLED\"\n      else if r._value == 1 then \"DISABLED\"\n      else \"UNKNOWN\"\n      })\n  )\n\n  |> keep(columns: [\"csc\", \"state\", \"_time\"])\n\n\n ",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "// CSC states\n// STANDBY = 5\n// OFFLINE = 4\n// FAULT = 3\n// ENABLED = 2\n// DISABLED = 1\n\nimport \"strings\"\n\nfrom(bucket: \"efd/autogen\")\n  |> range(start: -inf)\n  |> filter(fn: (r) => r._measurement =~ /.*ATAOS|.*ATDome|.*ATDomeTrajectory|.*ATHexapod|.*ATPneumatics|.*ATPtg|.*ATMCS/  and (r._field == \"summaryState\"))\n  |> last()\n  |> map(fn: (r) => ({\n    r with\n    csc: strings.split(v: r._measurement, t: \".\")[2],\n    state:\n      if r._value == 5 then \"5 (STANDBY)\"\n      else if r._value == 4 then \"OFFLINE\"\n      else if r._value == 3 then \"FAULT\"\n      else if r._value == 2 then \"ENABLED\"\n      else if r._value == 1 then \"DISABLED\"\n      else \"UNKNOWN\"\n      })\n  )\n\n  |> keep(columns: [\"csc\", \"state\", \"_time\"])\n\n\n ",
							"range": null,
							"shifts": null
						},
						"source": "/chronograf/v1/sources/1",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "table",
				"colors": [
					{
						"id": "base",
						"type": "text",
						"hex": "#00C9FF",
						"name": "laser",
						"value": "-1000000000000000000"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": false,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "_time",
						"displayName": "",
						"visible": false
					},
					{
						"internalName": "csc",
						"displayName": "CSC",
						"visible": true
					},
					{
						"internalName": "state",
						"displayName": "State",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": false,
					"digits": 2
				},
				"note": "",
				"noteVisibility": "default",
				"links": {
					"self": "/chronograf/v1/dashboards/57/cells/658e0f86-488e-4f2c-9b95-839bcfee57ba"
				}
			},
			{
				"i": "5e32fe54-ed91-4670-a6b2-8be3970d23e9",
				"x": 0,
				"y": 0,
				"w": 12,
				"h": 3,
				"name": "Usage",
				"queries": [
					{
						"query": "",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "",
							"range": null,
							"shifts": null
						},
						"source": "",
						"type": "influxql"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "note",
				"colors": [],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 2
				},
				"note": "CSC state and heatbeats\n=======================\n\nThis dashboard helps to monitor the Telegraf Kafka consumers in Sasquatch.\n\nIf a CSC is running we should see heartbeats.\n\nif a CSC is running and is enabled we should see telemetry data. \n\nIf we see heartbeats or data reaching Kafka but not InfluxDB there&#39;s a problem with the Telegraf Kafka consumers.\n",
				"noteVisibility": "showWhenNoData",
				"links": {
					"self": "/chronograf/v1/dashboards/57/cells/5e32fe54-ed91-4670-a6b2-8be3970d23e9"
				}
			},
			{
				"i": "2ca19d1f-e418-44b3-b0f1-f64311bfa671",
				"x": 0,
				"y": 5,
				"w": 12,
				"h": 2,
				"name": "AuxTel heartbeats (messages/sec)",
				"queries": [
					{
						"query": "from(bucket: \"efd/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement =~ /.*ATAOS|.*ATDome|.*ATDomeTrajectory|.*ATHexapod|.*ATPneumatics|.*ATPtg|.*ATMCS/ and (r._field == \"heartbeat\"))\n  |> aggregateWindow(every: 1s, fn: count)\n  |> keep(columns: [\"_time\", \"_measurement\", \"_value\"])\n ",
						"queryConfig": {
							"database": "",
							"measurement": "",
							"retentionPolicy": "",
							"fields": [],
							"tags": {},
							"groupBy": {
								"time": "",
								"tags": []
							},
							"areTagsAccepted": false,
							"rawText": "from(bucket: \"efd/autogen\")\n  |> range(start: dashboardTime)\n  |> filter(fn: (r) => r._measurement =~ /.*ATAOS|.*ATDome|.*ATDomeTrajectory|.*ATHexapod|.*ATPneumatics|.*ATPtg|.*ATMCS/ and (r._field == \"heartbeat\"))\n  |> aggregateWindow(every: 1s, fn: count)\n  |> keep(columns: [\"_time\", \"_measurement\", \"_value\"])\n ",
							"range": null,
							"shifts": null
						},
						"source": "/chronograf/v1/sources/1",
						"type": "flux"
					}
				],
				"axes": {
					"x": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					},
					"y2": {
						"bounds": [
							"",
							""
						],
						"label": "",
						"prefix": "",
						"suffix": "",
						"base": "10",
						"scale": "linear"
					}
				},
				"type": "line-stepplot",
				"colors": [
					{
						"id": "e5a83a74-0836-4731-aec7-6665f11b3cf3",
						"type": "scale",
						"hex": "#31C0F6",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "0ba45a1b-810b-4c58-915e-043a5d965224",
						"type": "scale",
						"hex": "#A500A5",
						"name": "Nineteen Eighty Four",
						"value": "0"
					},
					{
						"id": "9665241b-31e3-48c9-a314-257ef9cfde03",
						"type": "scale",
						"hex": "#FF7E27",
						"name": "Nineteen Eighty Four",
						"value": "0"
					}
				],
				"legend": {},
				"tableOptions": {
					"verticalTimeAxis": true,
					"sortBy": {
						"internalName": "time",
						"displayName": "",
						"visible": true
					},
					"wrapping": "truncate",
					"fixFirstColumn": true
				},
				"fieldOptions": [
					{
						"internalName": "time",
						"displayName": "",
						"visible": true
					}
				],
				"timeFormat": "MM/DD/YYYY HH:mm:ss",
				"decimalPlaces": {
					"isEnforced": true,
					"digits": 2
				},
				"note": "",
				"noteVisibility": "default",
				"links": {
					"self": "/chronograf/v1/dashboards/57/cells/2ca19d1f-e418-44b3-b0f1-f64311bfa671"
				}
			}
		],
		"templates": [
			{
				"tempVar": ":ConsumerGroup:",
				"values": [
					{
						"value": ".*ATAOS.*heartbeats",
						"type": "csv",
						"selected": true
					}
				],
				"id": "ae9d2e15-c0b9-4abb-b0e4-3cbbc4f7438c",
				"type": "csv",
				"label": "",
				"query": {
					"influxql": "",
					"measurement": "",
					"tagKey": "",
					"fieldKey": ""
				},
				"sourceID": "1",
				"links": {
					"self": "/chronograf/v1/dashboards/57/templates/ae9d2e15-c0b9-4abb-b0e4-3cbbc4f7438c"
				}
			}
		],
		"name": "CSC state and heartbeats",
		"organization": "default",
		"links": {
			"self": "/chronograf/v1/dashboards/57",
			"cells": "/chronograf/v1/dashboards/57/cells",
			"templates": "/chronograf/v1/dashboards/57/templates"
		}
	}
}